// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  name       String?
  username   String      @unique
  email      String      @unique
  password   String
  Uname       Blog[]      @relation("bye")
  comments   Comments[]
  userDetail UserDetail?
  blog       Blog[]      @relation("hi")
}

model UserDetail {
  id           Int     @id @default(autoincrement())
  userId       Int     @unique
  followers    Int     @default(0)
  following    Int     @default(0)
  bio          String?
  profilePhoto String? @unique
  coverPhoto   String?

  blog Blog?
  user User  @relation(fields: [userId], references: [id])
}

model Blog {
  id         Int        @id @default(autoincrement())
  authorId   Int
  title      String
  topic      String
  content    String
  thumbnail  String?
  vote       Int        @default(0)
  Comment    Comments[]
  Prophoto   String     @unique
  Uname      String
  User       User       @relation("bye", fields: [Uname], references: [username])
  UserDetail UserDetail @relation(fields: [Prophoto], references: [profilePhoto])
  author     User       @relation("hi", fields: [authorId], references: [id])
}

model Comments {
  postId   Int    @unique
  accoutId Int    @unique
  id       Int    @id @default(autoincrement())
  content  String
  like     Int    @default(0)
  dislike  Int    @default(0)
  user     User   @relation(fields: [accoutId], references: [id])
  Blog     Blog   @relation(fields: [blogId], references: [id])
  blogId   Int
}
